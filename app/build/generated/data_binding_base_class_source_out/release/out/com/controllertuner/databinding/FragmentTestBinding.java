// Generated by view binder compiler. Do not edit!
package com.controllertuner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.controllertuner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTestBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView buttonStatus;

  @NonNull
  public final View leftStickIndicator;

  @NonNull
  public final TextView leftStickMagnitudeValue;

  @NonNull
  public final TextView leftStickXValue;

  @NonNull
  public final TextView leftStickYValue;

  @NonNull
  public final ProgressBar leftTriggerProgress;

  @NonNull
  public final TextView leftTriggerValue;

  @NonNull
  public final View rightStickIndicator;

  @NonNull
  public final TextView rightStickMagnitudeValue;

  @NonNull
  public final TextView rightStickXValue;

  @NonNull
  public final TextView rightStickYValue;

  @NonNull
  public final ProgressBar rightTriggerProgress;

  @NonNull
  public final TextView rightTriggerValue;

  @NonNull
  public final TextView testControllerStatus;

  private FragmentTestBinding(@NonNull ScrollView rootView, @NonNull TextView buttonStatus,
      @NonNull View leftStickIndicator, @NonNull TextView leftStickMagnitudeValue,
      @NonNull TextView leftStickXValue, @NonNull TextView leftStickYValue,
      @NonNull ProgressBar leftTriggerProgress, @NonNull TextView leftTriggerValue,
      @NonNull View rightStickIndicator, @NonNull TextView rightStickMagnitudeValue,
      @NonNull TextView rightStickXValue, @NonNull TextView rightStickYValue,
      @NonNull ProgressBar rightTriggerProgress, @NonNull TextView rightTriggerValue,
      @NonNull TextView testControllerStatus) {
    this.rootView = rootView;
    this.buttonStatus = buttonStatus;
    this.leftStickIndicator = leftStickIndicator;
    this.leftStickMagnitudeValue = leftStickMagnitudeValue;
    this.leftStickXValue = leftStickXValue;
    this.leftStickYValue = leftStickYValue;
    this.leftTriggerProgress = leftTriggerProgress;
    this.leftTriggerValue = leftTriggerValue;
    this.rightStickIndicator = rightStickIndicator;
    this.rightStickMagnitudeValue = rightStickMagnitudeValue;
    this.rightStickXValue = rightStickXValue;
    this.rightStickYValue = rightStickYValue;
    this.rightTriggerProgress = rightTriggerProgress;
    this.rightTriggerValue = rightTriggerValue;
    this.testControllerStatus = testControllerStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_test, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTestBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonStatus;
      TextView buttonStatus = ViewBindings.findChildViewById(rootView, id);
      if (buttonStatus == null) {
        break missingId;
      }

      id = R.id.leftStickIndicator;
      View leftStickIndicator = ViewBindings.findChildViewById(rootView, id);
      if (leftStickIndicator == null) {
        break missingId;
      }

      id = R.id.leftStickMagnitudeValue;
      TextView leftStickMagnitudeValue = ViewBindings.findChildViewById(rootView, id);
      if (leftStickMagnitudeValue == null) {
        break missingId;
      }

      id = R.id.leftStickXValue;
      TextView leftStickXValue = ViewBindings.findChildViewById(rootView, id);
      if (leftStickXValue == null) {
        break missingId;
      }

      id = R.id.leftStickYValue;
      TextView leftStickYValue = ViewBindings.findChildViewById(rootView, id);
      if (leftStickYValue == null) {
        break missingId;
      }

      id = R.id.leftTriggerProgress;
      ProgressBar leftTriggerProgress = ViewBindings.findChildViewById(rootView, id);
      if (leftTriggerProgress == null) {
        break missingId;
      }

      id = R.id.leftTriggerValue;
      TextView leftTriggerValue = ViewBindings.findChildViewById(rootView, id);
      if (leftTriggerValue == null) {
        break missingId;
      }

      id = R.id.rightStickIndicator;
      View rightStickIndicator = ViewBindings.findChildViewById(rootView, id);
      if (rightStickIndicator == null) {
        break missingId;
      }

      id = R.id.rightStickMagnitudeValue;
      TextView rightStickMagnitudeValue = ViewBindings.findChildViewById(rootView, id);
      if (rightStickMagnitudeValue == null) {
        break missingId;
      }

      id = R.id.rightStickXValue;
      TextView rightStickXValue = ViewBindings.findChildViewById(rootView, id);
      if (rightStickXValue == null) {
        break missingId;
      }

      id = R.id.rightStickYValue;
      TextView rightStickYValue = ViewBindings.findChildViewById(rootView, id);
      if (rightStickYValue == null) {
        break missingId;
      }

      id = R.id.rightTriggerProgress;
      ProgressBar rightTriggerProgress = ViewBindings.findChildViewById(rootView, id);
      if (rightTriggerProgress == null) {
        break missingId;
      }

      id = R.id.rightTriggerValue;
      TextView rightTriggerValue = ViewBindings.findChildViewById(rootView, id);
      if (rightTriggerValue == null) {
        break missingId;
      }

      id = R.id.testControllerStatus;
      TextView testControllerStatus = ViewBindings.findChildViewById(rootView, id);
      if (testControllerStatus == null) {
        break missingId;
      }

      return new FragmentTestBinding((ScrollView) rootView, buttonStatus, leftStickIndicator,
          leftStickMagnitudeValue, leftStickXValue, leftStickYValue, leftTriggerProgress,
          leftTriggerValue, rightStickIndicator, rightStickMagnitudeValue, rightStickXValue,
          rightStickYValue, rightTriggerProgress, rightTriggerValue, testControllerStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
